name: 'Trellis CLI Deploy'
author: Scott Walkinshaw
description: 'GitHub Action for deploying a Trellis based WordPress project'
branding:
  icon: 'send'  
  color: 'green'

inputs:
  node-version:
    description: 'Version of Node JS'
    required: false
    default: '16'
  python-version:
    description: 'Version of Python'
    required: false
    default: '3.9.9'
  trellis-cli-version:
    description: 'Version of trellis-cli'
    required: false
  deploy:
    description: 'Whether to run the deploy or not. Set this to false if you want more manual control.'
    required: false
    default: true
  environment:
    description: 'Name of environment to deploy. Defaults to production.'
    required: false
    default: production
  branch:
    description: 'Git branch to deploy. Defaults to `master`.'
    required: false
    default: master
  ansible-vault-password:
    description: 'Ansible Vault password. Use a GitHub secret for this value.'
    required: true
  ssh-private-key:
    description: 'SSH private key (contents of key file). Use a GitHub secret for this value.'
    required: true
  ssh-known-hosts:
    description: 'Known hosts for SSH. Use a GitHub secret for this value.'
    required: true
  slack-notify:
    description: 'Notify about deploy on Slack.'
    required: false
    default: 'no'
  
runs:
  using: 'composite'
  steps:
  - uses: actions/setup-python@v2
    with:
      python-version: ${{ inputs.python-version }}
  - uses: shimataro/ssh-key-action@v2
    with:
      key: ${{ inputs.ssh-private-key }}
      known_hosts: ${{ inputs.ssh-known-hosts }}
  - uses: webfactory/ssh-agent@v0.5.4
    with:
      ssh-private-key: ${{ inputs.ssh-private-key }}
  - name: Create Ansible vault password file
    env:
      ANSIBLE_VAULT_PASSWORD: ${{ inputs.ansible-vault-password }}
    run: echo "$ANSIBLE_VAULT_PASSWORD" > .vault_pass
    shell: bash
    working-directory: trellis
  - name: Cache virtualenv
    uses: actions/cache@v2
    with:
      path: trellis/.trellis/virtualenv
      key: ${{ runner.os }}-virtualenv-${{ hashFiles('trellis/requirements.txt') }}
      restore-keys: |
        ${{ runner.os }}-virtualenv-
  - name: Install trellis-cli
    run: |
      curl -sL https://roots.io/trellis/cli/get | bash -s -- -b "$HOME/.local/bin"
      echo "$HOME/.local/bin" >> $GITHUB_PATH
    shell: bash
  - name: Install Trellis dependencies
    run: trellis init
    working-directory: trellis/
    shell: bash
  - name: Deploy site
    if: inputs.deploy == 'true' && inputs.hostname == ''
    run: trellis deploy --branch=${{inputs.branch }} ${{ inputs.environment }}
    shell: bash
  - name: Slack notify
    uses: 8398a7/action-slack@v3
    if: inputs.slack-notify == 'yes'
    with:
      status: ${{ job.status }}
      fields: repo,message,action,author # selectable (default: repo,message)
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
    if: always() # Pick up events even if the job fails or is canceled.
